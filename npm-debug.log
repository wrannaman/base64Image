0 info it worked if it ends with ok
1 verbose cli [ '/Users/AP/.nvm/versions/node/v4.1.2/bin/node',
1 verbose cli   '/Users/AP/.nvm/versions/node/v4.1.2/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@2.14.4
3 info using node@v4.1.2
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/AP/Desktop/base64Image',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/AP/.npm/base64Image/0.1.1/package.tgz not in flight; packing
9 verbose tar pack [ '/Users/AP/.npm/base64Image/0.1.1/package.tgz',
9 verbose tar pack   '/Users/AP/Desktop/base64Image' ]
10 verbose tarball /Users/AP/.npm/base64Image/0.1.1/package.tgz
11 verbose folder /Users/AP/Desktop/base64Image
12 info prepublish base64Image@0.1.1
13 verbose addLocalTarball adding from inside cache /Users/AP/.npm/base64Image/0.1.1/package.tgz
14 silly cache afterAdd base64Image@0.1.1
15 verbose afterAdd /Users/AP/.npm/base64Image/0.1.1/package/package.json not in flight; writing
16 verbose afterAdd /Users/AP/.npm/base64Image/0.1.1/package/package.json written
17 silly publish { name: 'base64Image',
17 silly publish   version: '0.1.1',
17 silly publish   description: 'Encode and decode images to and from base64',
17 silly publish   main: 'index.js',
17 silly publish   scripts: { test: 'mocha test/tests.js' },
17 silly publish   engines: { node: '>=0.10' },
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'git+https://github.com/wrannaman/base64Image.git' },
17 silly publish   homepage: 'http://wrannaman.github.io/base64Image/',
17 silly publish   keywords:
17 silly publish    [ 'image',
17 silly publish      'download',
17 silly publish      'base64',
17 silly publish      'encode',
17 silly publish      'decode',
17 silly publish      'javascript',
17 silly publish      'node' ],
17 silly publish   bugs: { url: 'https://github.com/wrannaman/base64Image/issues' },
17 silly publish   author: { name: 'Wrannaman' },
17 silly publish   license: 'MIT',
17 silly publish   dependencies: { request: '^2.51.x' },
17 silly publish   devDependencies: { mocha: '^2.0.x', should: '^4.3.x' },
17 silly publish   readme: '[![Build Status](https://travis-ci.org/wrannaman/base64Image.svg)](https://travis-ci.org/wrannaman/base64Image)  \n\nbase64Image\n=================\n\nDownload images from remote URLs or use local images and encode/decode them to base64\n\nTo install  \n`npm install base64Image --save`  \n\nTo run tests  \n`npm test`  \n\n### Usage  \n\nRequire the library in your .js file  \n`var base64 = require(\'base64Image\');`  \n\n#### Download and encode an image  \n```\nvar options = {string: true};\n\nbase64.base64encoder(\'www.someurl.com/image.jpg\', options, function (err, image) {\n    if (err) {\n        console.log(err);\n    }\n    console.log(image);\n});\n```\n\n#### Encode a local image  \n```  \nvar path = __dirname + \'/../test.jpg\',\n          options = {localFile: true, string: true};\n\nbase64.base64encoder(path, options, function (err, image) {  \n    if (err) { console.log(err); }  \n    console.log(image);  \n});  \n```\n\n\n##### Parameters  \n - `url` (string) - the url of the image to be downloaded and encoded.\n - `options` (object)\n \t- if `string` is passed is with \'true\', the image returned will be a base64 string. Otherwise, the base64 buffer is returned.  \n \t- if `localFile` is passed is with \'true\', a local image instead of a remote one will be used  \n - `callback` (function) - the callback will contain the err object and the encoded image object.  \n\n#### Decode and write a base64 encoded image to disk  \n```  \nvar options = {filename: \'test\', filePath: \'./tmp/uploads\'};\nvar imageData = new Buffer(\'/9j/4AAQSkZJRgABAQAAAQABAAD...\', \'base64\');\n\nbase64.base64decoder(imageData, options, function (err, saved) {\n    if (err) { console.log(err); }  \n    console.log(saved);    \n});  \n```  \n\n##### Parameters  \n - `imageData` (buffer) - the base64 image buffer.  \n - `options` (object) - contains the \'filename\' property; this will be the written image file.  Also, you can specify a filePath which takes a directory path to write the file to. The directory path must exist already ( @TODO ).\n - `callback` (function) - the callback will contain the err object and the \'successful save\' string.\n\n### License  \nThis library is licensed under the MIT license.  \n\n### Issues  \nReport a bug in the issues.   \n\nUpdated by Wrannaman & forked From [Riyadh Al Nur](http://blog.verticalaxisbd.com)\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: '9ace14d71b827b99fdab4179f3e8bdef69f35291',
17 silly publish   _id: 'base64Image@0.1.1',
17 silly publish   _shasum: '1ab342546ffb5ee55db2b7c25ac4da9fb6f7ad5d',
17 silly publish   _from: '.' }
18 verbose getPublishConfig undefined
19 silly mapToRegistry name base64Image
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/base64Image
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading /Users/AP/.npm/base64Image/0.1.1/package.tgz
25 verbose request uri https://registry.npmjs.org/base64Image
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 3:42:30 PM
28 verbose request using bearer token for auth
29 verbose request id c1b5547269594dd5
30 http request PUT https://registry.npmjs.org/base64Image
31 http 400 https://registry.npmjs.org/base64Image
32 verbose headers { 'content-type': 'application/json',
32 verbose headers   'cache-control': 'max-age=300',
32 verbose headers   'content-length': '54',
32 verbose headers   'accept-ranges': 'bytes',
32 verbose headers   date: 'Fri, 18 Dec 2015 23:42:35 GMT',
32 verbose headers   via: '1.1 varnish',
32 verbose headers   connection: 'keep-alive',
32 verbose headers   'x-served-by': 'cache-lax1432-LAX',
32 verbose headers   'x-cache': 'MISS',
32 verbose headers   'x-cache-hits': '0',
32 verbose headers   'x-timer': 'S1450482151.779631,VS0,VE3673' }
33 verbose request invalidating /Users/AP/.npm/registry.npmjs.org/base64Image on PUT
34 error publish Failed PUT 400
35 verbose stack Error: name can no longer contain capital letters : base64Image
35 verbose stack     at makeError (/Users/AP/.nvm/versions/node/v4.1.2/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:263:12)
35 verbose stack     at CachingRegistryClient.<anonymous> (/Users/AP/.nvm/versions/node/v4.1.2/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:251:14)
35 verbose stack     at Request._callback (/Users/AP/.nvm/versions/node/v4.1.2/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:171:14)
35 verbose stack     at Request.self.callback (/Users/AP/.nvm/versions/node/v4.1.2/lib/node_modules/npm/node_modules/request/request.js:198:22)
35 verbose stack     at emitTwo (events.js:87:13)
35 verbose stack     at Request.emit (events.js:172:7)
35 verbose stack     at Request.<anonymous> (/Users/AP/.nvm/versions/node/v4.1.2/lib/node_modules/npm/node_modules/request/request.js:1073:14)
35 verbose stack     at emitOne (events.js:82:20)
35 verbose stack     at Request.emit (events.js:169:7)
35 verbose stack     at IncomingMessage.<anonymous> (/Users/AP/.nvm/versions/node/v4.1.2/lib/node_modules/npm/node_modules/request/request.js:1019:12)
36 verbose statusCode 400
37 verbose pkgid base64Image
38 verbose cwd /Users/AP/Desktop/base64Image
39 error Darwin 15.0.0
40 error argv "/Users/AP/.nvm/versions/node/v4.1.2/bin/node" "/Users/AP/.nvm/versions/node/v4.1.2/bin/npm" "publish"
41 error node v4.1.2
42 error npm  v2.14.4
43 error code E400
44 error name can no longer contain capital letters : base64Image
45 error If you need help, you may report this error at:
45 error     <https://github.com/npm/npm/issues>
46 verbose exit [ 1, true ]
